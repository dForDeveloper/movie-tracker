{"version":3,"sources":["actions/index.js","utils/api.js","thunks/getFavorites.js","thunks/loginUser.js","containers/LoginForm/LoginForm.js","containers/LoginPrompt/LoginPrompt.js","containers/MovieCard/MovieCard.js","thunks/toggleFavorite.js","containers/MovieContainer/MovieContainer.js","components/MovieDetails/MovieDetails.js","containers/NavBar/NavBar.js","containers/SignUpForm/SignUpForm.js","thunks/createUser.js","containers/App/App.js","thunks/fetchMovies.js","serviceWorker.js","reducers/index.js","reducers/moviesReducer.js","reducers/currentUserReducer.js","reducers/favoritesReducer.js","reducers/showLoginPromptReducer.js","index.js"],"names":["setUser","user","type","setFavorites","favorites","toggleLoginPrompt","validity","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","json","abrupt","Error","concat","statusText","status","stop","this","_x","apply","getFavorites","userID","dispatch","favesUrl","data","map","favorite","movie_id","localStorage","setItem","JSON","stringify","loginUser","email","password","_response$data","name","id","method","body","headers","Content-Type","t0","LoginForm","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","handleSubmit","_this$state","preventDefault","state","props","inherits","createClass","key","react_default","createElement","onSubmit","className","htmlFor","onChange","Redirect","to","Component","connect","onClick","Link","MovieCard","_getPrototypeOf2","_len","args","Array","_key","handleClick","movie","objectSpread","user_id","toggleFavorite","_this2","_this$props","title","poster_path","currentUser","src","alt","isFavorite","_options","MovieContainer","getMoviesToDisplay","movies","includes","containers_MovieCard_MovieCard","assign","match","showLoginPrompt","favoriteMovies","filter","containers_LoginPrompt_LoginPrompt","path","MovieDetails","release_date","vote_average","overview","NavBar","removeItem","getUserLinks","location","pathname","SignUpForm","passwordOriginal","checkMatchingPassword","checkEmailRegex","createUser","test","_this$state2","passwordConfirmed","getNameAndEmailInputFields","_this$state3","inputStyle","required","getPasswordInputFields","_this$state4","App","componentDidMount","process","fetchMovies","getLocalStorage","parse","getItem","Route","component","exact","render","params","find","parseInt","components_MovieDetails_MovieDetails","withRouter","results","Boolean","window","hostname","rootReducer","combineReducers","action","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","es","BrowserRouter","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbfb4e76.chunk.js","sourcesContent":["export const addMovies = (movies) => ({\n  type: 'ADD_MOVIES',\n  movies\n});\n\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  user\n});\n\nexport const setFavorites = (favorites) => ({\n  type: 'SET_FAVORITES',\n  favorites\n});\n\nexport const toggleLoginPrompt = (validity) => ({\n  type: 'TOGGLE_LOGIN_PROMPT',\n  validity\n});","export const fetchData = async (url, options = {}) => {\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return await response.json();\n  } else {\n    throw Error(`${response.statusText} - Status ${response.status}`);\n  }\n}","import { setFavorites } from '../actions';\nimport { fetchData } from '../utils/api';\n\nexport const getFavorites = (userID) => {\n  return async (dispatch) => {\n    const favesUrl = `https://movie-tracker-jd.herokuapp.com/api/users/${userID}/favorites`;\n    const response = await fetchData(favesUrl);\n    const favorites = response.data.map(favorite => favorite.movie_id);\n    dispatch(setFavorites(favorites));\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }\n}","import { fetchData } from '../utils/api';\nimport { setUser, toggleLoginPrompt } from '../actions';\nimport { getFavorites } from './getFavorites';\n\nexport const loginUser = (email, password) => {\n  return async (dispatch) => {\n    try {\n      const loginUrl = 'https://movie-tracker-jd.herokuapp.com/api/users';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetchData(loginUrl, options);\n      const { name, id } = response.data;\n      dispatch(setUser({ name, id }));\n      await dispatch(getFavorites(id));\n      dispatch(toggleLoginPrompt(false));\n      localStorage.setItem('user', JSON.stringify({ name, id }));\n      return response.status;\n    } catch {\n      return 'error';\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { loginUser } from '../../thunks/loginUser';\n\nexport class LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      status: ''\n    }\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const status = await this.props.loginUser(email, password);\n    this.setState({ status });\n  }\n\n  render() {\n    let { status } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"LoginForm\">\n        <h2 className=\"login-form-title\">Log In</h2>\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" className=\"email-input\" onChange={this.handleChange} />\n        <label htmlFor=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n        <input className=\"login-button\" type=\"submit\" value=\"login\" />\n        {status === 'error' && <p className=\"notice\">Email and password do not match.</p>}\n        {status === 'success' && <Redirect to='/' />}\n      </form>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  loginUser: (email, password) => dispatch(loginUser(email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n\nLoginForm.propTypes = {\n  loginUser: PropTypes.func,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { toggleLoginPrompt } from '../../actions';\n\nexport const LoginPrompt = (props) => {\n  const { toggleLoginPrompt } = props;\n  return (\n    <div className=\"LoginPrompt\">\n      <button className=\"close-button\" onClick={() => toggleLoginPrompt(false)}>X</button>\n      <div className=\"button-container\">\n        <h3 className=\"login-title\">\n          You must be logged in to save favorites.\n        </h3>\n        <Link to='/sign-up'>\n          <button className=\"signupprompt-button\" onClick={() => toggleLoginPrompt(false)}>Sign Up</button>\n        </Link>\n        <Link to='/login'>\n          <button className=\"loginprompt-button\" onClick={() => toggleLoginPrompt(false)}>Log In</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  toggleLoginPrompt: (validity) => dispatch(toggleLoginPrompt(validity))\n})\n\nexport default connect(null, mapDispatchToProps)(LoginPrompt);\n\nLoginPrompt.propTypes = {\n  toggleLoginPrompt: PropTypes.func\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { toggleLoginPrompt } from '../../actions';\nimport { toggleFavorite } from '../../thunks/toggleFavorite';\n\nexport class MovieCard extends Component {\n  handleClick = async (user) => {\n    if (user.name) {\n      const movie = {\n        ...this.props,\n        user_id: user.id,\n        movie_id: this.props.id\n      };\n      await this.props.toggleFavorite(movie, this.props.favorite);\n    } else {\n      this.props.toggleLoginPrompt(true);\n    }\n  }\n\n  render() {\n    const { title, poster_path, currentUser, favorite, id } = this.props;\n    return (\n      <div className=\"MovieCard\">\n        <h3 className=\"moviecard-title\">{title}</h3>\n        <Link to={`/movies/${id}`}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            className=\"moviecard-image\"\n          />\n        </Link>\n        <div className=\"moviecard-favorite\" onClick={() => this.handleClick(currentUser)}>\n          { favorite ? 'Remove ❌' : 'Favorite 💙'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  toggleLoginPrompt: (validity) => dispatch(toggleLoginPrompt(validity)),\n  toggleFavorite: (movie, isFavorite) => dispatch(toggleFavorite(movie, isFavorite))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCard);\n\nMovieCard.propTypes = {\n  adult: PropTypes.bool,\n  backdrop_path: PropTypes.string,\n  currentUser: PropTypes.object,\n  favorite: PropTypes.bool,\n  genre_ids: PropTypes.array,\n  id: PropTypes.number,\n  original_language: PropTypes.string,\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  popularity: PropTypes.number,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n  toggleFavorite: PropTypes.func,\n  toggleLoginPrompt: PropTypes.func,\n  title: PropTypes.string,\n  video: PropTypes.bool,\n  vote_average: PropTypes.number,\n  vote_count: PropTypes.number\n};","import { getFavorites } from './getFavorites';\nimport { fetchData } from '../utils/api';\n\nexport const toggleFavorite = (movie, isFavorite) => {\n  return async (dispatch) => {\n    const { user_id, movie_id } = movie;\n    if (isFavorite) {\n      const url = `https://movie-tracker-jd.herokuapp.com/api/users/${user_id}/favorites/${movie_id}`;\n      const options = {\n        method: 'DELETE',\n        body: JSON.stringify({ user_id, movie_id }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      await fetchData(url, options);\n    } else {\n      const url = 'https://movie-tracker-jd.herokuapp.com/api/users/favorites/new';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await fetchData(url, options);\n    }\n    dispatch(getFavorites(user_id));\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginPrompt from '../LoginPrompt/LoginPrompt';\nimport MovieCard from '../../containers/MovieCard/MovieCard';\n\nexport class MovieContainer extends Component {\n  getMoviesToDisplay = (movies) => {\n    const { favorites } = this.props;\n    return movies.map(movie => {\n      if (favorites.includes(movie.id)) {\n        return <MovieCard key={movie.id} {...movie} favorite={true} />\n      }\n      return <MovieCard key={movie.id} {...movie} favorite={false} />\n    });\n  }\n  \n  render() {\n    const { movies, favorites, match, showLoginPrompt } = this.props;\n    const favoriteMovies = movies.filter(movie => favorites.includes(movie.id));\n    return (\n      <div className=\"MovieContainer\">\n        {showLoginPrompt && <LoginPrompt />}\n        {match.path === '/' && this.getMoviesToDisplay(movies)}\n        {match.path === '/favorites' && this.getMoviesToDisplay(favoriteMovies)}\n        {match.path === '/favorites' && favorites.length === 0 &&\n          <p>There are no favorites to display.</p>}\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  favorites: state.favorites,\n  showLoginPrompt: state.showLoginPrompt\n});\n\nexport default connect(mapStateToProps)(MovieContainer);\n\nMovieContainer.propTypes = {\n  dispatch: PropTypes.func,\n  favorites: PropTypes.array,\n  match: PropTypes.object,\n  movies: PropTypes.array,\n  showLoginPrompt: PropTypes.bool\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = (props) => {\n  const { title, release_date, poster_path, vote_average, overview } = props;\n  return (\n    <div className=\"MovieDetails\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={title}\n        className=\"movie-image\"\n      />\n      <div className=\"movie-info\">\n        <h3 className=\"movie-title\">{title}</h3>\n          <p className=\"movie-overview\"> {overview}</p>\n          <p className=\"movie-details\">\n            <span className=\"detail-bold\">\n              Release Date: </span>\n            {release_date}\n          </p>\n          <p className=\"movie-details\">\n            <span className=\"detail-bold\">\n              Rating: </span>\n            {vote_average}\n          </p>\n      </div>\n    </div>\n  )\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  adult: PropTypes.bool,\n  backdrop_path: PropTypes.string,\n  genre_ids: PropTypes.array,\n  id: PropTypes.number,\n  original_language: PropTypes.string,\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  popularity: PropTypes.number,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n  title: PropTypes.string,\n  video: PropTypes.bool,\n  vote_average: PropTypes.number,\n  vote_count: PropTypes.number\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setUser, setFavorites } from '../../actions';\n\nexport class NavBar extends Component {\n  handleClick = () => {\n    this.props.setUser({});\n    this.props.setFavorites([]);\n    localStorage.removeItem('user');\n    localStorage.removeItem('favorites');\n  }\n\n  getUserLinks = () => {\n    const { currentUser, location } = this.props\n    if (currentUser.name) {\n      return (\n        <div className=\"user-links\">\n          <p className=\"greeting\">Hello,<span className=\"username\">\n           { currentUser.name }\n          </span></p>\n          <span className=\"nav-left\">\n          {location.pathname !== '/' && <Link to='/' id=\"item-left\">Home</Link>}\n          {location.pathname === '/' && <Link to='/favorites' id=\"item-left\">View Favorites</Link>}\n          </span>\n          <span className=\"nav-right\">\n            <Link to='/' id=\"logout-link\" onClick={this.handleClick}>Log Out</Link>\n          </span>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"user-links\">\n          <span className=\"nav-left\">\n            {location.pathname !== '/' && <Link to='/' id=\"item-left\">Home</Link>}\n            <Link to='/sign-up' id=\"item-left\">Sign Up</Link>\n            <Link to='/login' id=\"item-right\">Log In</Link>\n          </span>\n          <span className=\"nav-right\">\n            <p>Log in to save your favorite movies.</p>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"NavBar\">\n        {this.getUserLinks()}\n      </nav>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(setUser(user)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n}); \n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)\n\nNavBar.propTypes = {\n  currentUser: PropTypes.object,\n  setFavorites: PropTypes.func,\n  setUser: PropTypes.func,\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../../thunks/createUser';\n\nexport class SignUpForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      passwordOriginal: '',\n      passwordConfirmed: '',\n      status: ''\n    };\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { name, email, passwordOriginal } = this.state;\n    if (this.checkMatchingPassword() && this.checkEmailRegex(email)) {\n      const status = await this.props.createUser(name, email, passwordOriginal);\n      this.setState({ status });\n    }\n  }\n\n  checkEmailRegex = (email) => {\n    const emailRegex = /[a-z]\\w+@[a-z]\\w+\\.[a-z]\\w+/;\n    return emailRegex.test(email);\n  }\n\n  checkMatchingPassword = () => {\n    const { passwordOriginal, passwordConfirmed } = this.state;\n    return passwordOriginal === passwordConfirmed;  \n  }\n\n  getNameAndEmailInputFields = () => {\n    const { name, email } = this.state;\n    const inputStyle = this.checkEmailRegex(email) ? null : 'input--red';\n    return (\n      <div className=\"div--email\">\n        <label htmlFor=\"name\">Name:</label>\n        <input id=\"name\" value={name} onChange={this.handleChange} required />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          value={email}\n          onChange={this.handleChange}\n          required\n          className={inputStyle}\n        />\n        {!this.checkEmailRegex(email) && <p className=\"notice\">Please enter a valid email.</p>}\n      </div>\n    );\n  }\n\n  getPasswordInputFields = () => {\n    const { passwordOriginal, passwordConfirmed } = this.state;\n    const inputStyle = this.checkMatchingPassword() ? null : 'input--red';\n    return (\n      <div className=\"div--password\">\n        <label htmlFor=\"passwordOriginal\">Password</label>\n        <input \n          id=\"passwordOriginal\"\n          value={passwordOriginal}\n          onChange={this.handleChange}\n          type=\"password\" \n          required\n        />\n        <label htmlFor=\"passwordConfirmed\">Confirm Password</label>\n        <input \n          id=\"passwordConfirmed\"\n          value={passwordConfirmed}\n          onChange={this.handleChange}\n          type=\"password\" \n          required\n          className={inputStyle}\n        />\n        {!this.checkMatchingPassword() && <p className=\"notice\">Passwords do not match.</p>}\n      </div>\n    );\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"SignUpForm\">\n        <h2 className=\"signup-title\">Sign Up</h2>\n        {this.getNameAndEmailInputFields()}\n        {this.getPasswordInputFields()}\n        <input className=\"create-button\" type=\"submit\" value=\"Submit\" />\n        {status === 'error' && <p className=\"notice\">Email has already been used.</p>}\n        {status === 'success' && <Redirect to='/' />}\n      </form>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  createUser: (name, email, password) => dispatch(\n    createUser(name, email, password)\n  )\n});\n\nexport default connect(null, mapDispatchToProps)(SignUpForm);\n\nSignUpForm.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object,\n  createUser: PropTypes.func\n};","import { fetchData } from '../utils/api';\nimport { loginUser } from './loginUser';\n\nexport const createUser = (name, email, password) => {\n  return async (dispatch) => {\n    try {\n      const url = 'https://movie-tracker-jd.herokuapp.com/api/users/new';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({ name, email, password }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      const response = await fetchData(url, options);\n      await dispatch(loginUser(email, password));\n      return response.status;\n    } catch {\n      return 'error';\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setUser, setFavorites } from '../../actions';\nimport { fetchMovies } from '../../thunks/fetchMovies';\nimport LoginForm from '../LoginForm/LoginForm';\nimport MovieContainer from '../MovieContainer/MovieContainer';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails';\nimport NavBar from '../../containers/NavBar/NavBar';\nimport SignUpForm from '../../containers/SignUpForm/SignUpForm';\n\nexport class App extends Component {\n  componentDidMount = () => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = \n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}`;\n    this.props.fetchMovies(url);\n    this.getLocalStorage();\n  }\n\n  getLocalStorage = () => {\n    let user = JSON.parse(localStorage.getItem('user'));\n    let favorites = JSON.parse(localStorage.getItem('favorites'));\n    user && this.props.setUser(user);\n    favorites && this.props.setFavorites(favorites);\n  }\n  \n  render() {\n    const { movies } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"title-section\">\n            <Link to='/'><h1 className=\"app-title\">Movie Tracker</h1></Link>\n            <h2 className=\"app-subtitle\">Find and save your favorite new releases.</h2>\n        </header>\n        <Route path='/' component={NavBar} />\n        <Route path='/sign-up' component={SignUpForm} />\n        <Route path='/login' component={LoginForm} />\n        <Route path='/favorites' component={MovieContainer}/>\n        <Route exact path='/' component={MovieContainer} />\n        <Route path='/movies/:id' render={({ match }) => {\n          const { id } = match.params;\n          const movie = movies.find(movie => movie.id === parseInt(id));\n          return movie ? <MovieDetails {...movie} /> : null;\n        }} />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchMovies: (url) => dispatch(fetchMovies(url)),\n  setUser: (user) => dispatch(setUser(user)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nApp.propTypes = {\n  movies: PropTypes.array,\n  fetchMovies: PropTypes.func,\n  setUser: PropTypes.func,\n  setFavorites: PropTypes.func,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object\n};","import { addMovies } from '../actions';\nimport { fetchData } from '../utils/api';\n\nexport const fetchMovies = (url) => {\n  return async (dispatch) => {\n    const data = await fetchData(url);\n    dispatch(addMovies(data.results));\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { moviesReducer } from './moviesReducer';\nimport { currentUserReducer } from './currentUserReducer';\nimport { favoritesReducer } from './favoritesReducer';\nimport { showLoginPromptReducer } from './showLoginPromptReducer';\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  currentUser: currentUserReducer,\n  favorites: favoritesReducer,\n  showLoginPrompt: showLoginPromptReducer\n});\n\nexport default rootReducer;","export const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_MOVIES':\n      return action.movies;\n    default:\n      return state;\n  }\n}","export const currentUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user;\n    default: \n      return state;\n  }\n}","export const favoritesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_FAVORITES':\n      return action.favorites;\n    default:\n      return state;\n  }\n}","export const showLoginPromptReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'TOGGLE_LOGIN_PROMPT':\n      return action.validity;\n    default: \n      return state;\n  } \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(rootReducer, devTools);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}